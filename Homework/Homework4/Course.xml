<COURSE INFO><COURSE>100 Introduction to Computer Science I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Concepts of problem solving, algorithm design, structured programming, fundamental algorithms and techniques, and computer systems concepts.  </DESCRIPTION><REQUIREMENTS>MAT 170</REQUIREMENTS><INSTRUCTOR>J. DELIBERO</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>110 Principles of Programming with Java</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Concepts of problem solving using Java, algorithm design, structured programming, fundamental algorithms and techniques, and computer systems concepts.  </DESCRIPTION><REQUIREMENTS>MAT 170</REQUIREMENTS><INSTRUCTOR>N. TADAYON</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>120 Digital Design Fundamentals</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Number systems, conversion methods, binary and complement arithmetic, boolean and switching algebra, circuit minimization. ROMs, PLAs, flipflops, synchronous sequential circuits, and register transfer design. Lecture, lab.  </DESCRIPTION><REQUIREMENTS>Computer Literacy</REQUIREMENTS><INSTRUCTOR>W. HIGGINS</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>180 Computer Literacy</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to general problem-solving approaches using widely available software tools such as database packages, word processors, spreadsheets, and report generators. </DESCRIPTION><INSTRUCTOR>C. RIDEN</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>181 Applied Problem Solving with Visual BASIC</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to systematic definition of problems, solution formulation, and method validation. Computer solution using Visual BASIC required for projects.  </DESCRIPTION><REQUIREMENTS>MAT 117</REQUIREMENTS><INSTRUCTOR>N. TADAYON</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>185 Internet and the World Wide Web</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Fundamental Internet concepts. World Wide Web browsing, searching, publishing, advanced Internet productivity tools.</DESCRIPTION></COURSE INFO><COURSE INFO><COURSE>200 Concepts of Computer Science</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Overview of algorithms, architecture, languages, computer systems, theory. Problem solving by programming with a high-level language (Java or another) . Prerequisites: CSE 100 or CSE 110. Instrcutor: H. LIU.</DESCRIPTION></COURSE INFO><COURSE INFO><COURSE>200 Concepts of Computer Science</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Object Oriented Design, Static and Dynamic Data Structures (Strings, Stacks, Queues, Binary Trees), Recursion, Searching and Sorting, Professional Responsibility. Prerequisite : CSE 200. </DESCRIPTION><INSTRUCTOR>S. AHAMED</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>225 Assembly Language Programming (Motorola)</COURSE><CREDIT HOURS>4</CREDIT HOURS><DESCRIPTION>Assembly language programming, register level computer organization, data structure and addressing modes, assemblers, and linkers.  </DESCRIPTION><REQUIREMENTS>CSE 100 or CSE 200</REQUIREMENTS><INSTRUCTOR>L. JOHNSON</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>226 Assembly Language Programming (Intel)</COURSE><CREDIT HOURS>4</CREDIT HOURS><DESCRIPTION>Assembly language programming, register level computer organization, data structure and addressing modes, assemblers, and linkers.   </DESCRIPTION><REQUIREMENTS>CSE 100 or CSE 200</REQUIREMENTS><INSTRUCTOR>W. HIGGINS</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>240 Introduction to Programming Languages</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to the procedural (Ada), applicative (LISP) and declarative (Prolog) languages. Prerequisites: CSE 210. </DESCRIPTION><INSTRUCTOR>R. WHITEHOUSE</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>310 Data Structures and Algorithms</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Advanced data structures and algorithms, including stacks, queues, trees (B, B+, AVL), and graphs, Searching for graphs, hashing and external sorting. Prerequiste: CSE 210 or MAT 243. </DESCRIPTION><INSTRUCTOR>B. GANNOD</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>330 Computer Organization and Architecture</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Instruction set architecture, processor performance and design, datapath, control (hardwired, microprogrammed), pipelining, input/output, Memory organization with cache, virtual memory.  </DESCRIPTION><REQUIREMENTS>CSE 225 or CSE 226</REQUIREMENTS><INSTRUCTOR>E. O'GRADY</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>340 Principles of Programming Languages</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to language design and implementation, Parallel, machine dependent and declarative language features, type theory, specification, recognition, translation, run-time management. Prerequisites: CSE 240, CSE 310, CSE 225 or CSE226. </DESCRIPTION><INSTRUCTOR>L. FALTZ</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>355 Introduction to Theoretical Computer Science</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to formal language theory and automata, Turing machines, decidability/undecidability, recursive function theory, and introduction to complexity theory.  </DESCRIPTION><REQUIREMENTS>CSE 310</REQUIREMENTS><INSTRUCTOR>A. SEN</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>360 Introduction to Software Engineering</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Software life cycle models, Project management, team development, environments and methodologies, software architectures, quality assurance and standards, legal, ethical issues.  </DESCRIPTION><REQUIREMENTS>CSE 240 and CSE 210</REQUIREMENTS><INSTRUCTOR>J. COLLOFELLO</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>408 Multimedia Information Systems</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Design, use, and applications of multimedia systems, An introduction to acquisition, compression, storage, retrieval, and presentation of data from different media such as images, text, voice, and alphanumeric.  </DESCRIPTION><REQUIREMENTS>CSE 310</REQUIREMENTS><INSTRUCTOR>F. GOLSHANI</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>412 Database Management</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to DBMS concepts, Data models and languages, Relational database theory, Database security/ integrity and concurrency.  </DESCRIPTION><REQUIREMENTS>CSE 310</REQUIREMENTS><INSTRUCTOR>K. CANDAN</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>420 Computer Architecture I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Computer architecture, Performance versus cost trade-offs, Instruction set design, Basic processor implementation and pipelining. </DESCRIPTION><REQUIREMENTS>CSE 330</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>421 Microprocessor System Design I</COURSE><CREDIT HOURS>4</CREDIT HOURS><DESCRIPTION>Assembly-language programming and logical hardware design of systems using 8-bit microprocessors and micro-controllers, Fundamental concepts of digital system design, Reliability and social, legal implications.  </DESCRIPTION><REQUIREMENTS>CSE 225</REQUIREMENTS><INSTRUCTOR>D. PHEANIS</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>422 Microprocessor System Design II</COURSE><CREDIT HOURS>4</CREDIT HOURS><DESCRIPTION>Design of microcomputer systems using contemporary logic and microcomputer system components, Requires assembly language programming. </DESCRIPTION><REQUIREMENTS>CSE 421</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>423 Microcomputer System Hardware</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Information and techniques presented in CSE 422 are used to develop the hardware design of a microprocessor, multiprogramming, microprocessor-based system. </DESCRIPTION><REQUIREMENTS>CSE 422</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>428 Computer-Aided Processes</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Hardware and software considerations for computerized manufacturing systems, Specific concentration on automatic inspection, numerical control, robotics, and integrated manufacturing systems. </DESCRIPTION><REQUIREMENTS>CSE 330</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>430 Operating Systems</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Operating system structure and services, processor scheduling, concurrent processes, synchronization techniques, memory management, virtual memory, input/output, storage management, file systems. Prerequisites: CSE 330 and CSE 340. </DESCRIPTION><INSTRUCTOR>D. MILLER</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>434 Computer Networks</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Physical layer basics, network protocol algorithms, error handling, flow control, multihop routing, network reliability, timing, security, data compression, cryptography fundamentals.  </DESCRIPTION><REQUIREMENTS>CSE 330</REQUIREMENTS><INSTRUCTOR>S. GUPTA</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>438 Systems Programming</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Design and implementtion of systems programs, including text editors, file utilities, monitors, assemblers, relocating linking loaders, I/O handlers, schedulers, etc.  </DESCRIPTION><REQUIREMENTS>CSE 421</REQUIREMENTS><INSTRUCTOR>D. PHEANIS</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>440 Compiler Construction I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to programming language implementation, Implementation strategies such as compilation, interpretation, and translation, Major compilation phases such as lexical analysis, semantic analysis, optimization, and code generation. Prerequisites: CSE 340 and CSE355. </DESCRIPTION><INSTRUCTOR>R. BAZZI</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>440 Compiler Construction I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Frameworks for distributed software components, Foundations of client-server computing and architectures for distributed object systems, Dynamic discovery and invocation. Prerequisites: CSE 360. </DESCRIPTION><INSTRUCTOR>W. TSAI</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>440 Compiler Construction I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>S, Client-server model for creating window interfaces, Toolkits and libraries such as X11, Microsoft Foundation Classes and Java Abstract Window Toolkit. Prerequisites: CSE 310. </DESCRIPTION><INSTRUCTOR>P. REINERT</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>450 Design and Analysis of Algorithms</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Design and analysis of computer algorithms using analytical and empirical methods,complexity measures, design methodologies, and survey of important algorithms.  </DESCRIPTION><REQUIREMENTS>CSE 310</REQUIREMENTS><INSTRUCTOR>G. KONJEVOD</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>457 Theory of Formal Languages</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Theory of grammar, methods of syntactic analysis and specification, types of artificial languages, relationship between formal languages, and automata. </DESCRIPTION><REQUIREMENTS>CSE 355</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>459 Logic for Computing Scientist I</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Propositional logic, syntax and semantics, proof theory vs. model theory, soundness, consistency and completeness, first order logic, logical theories, automated theorem proving, ground resolution, pattern matching unification and resolution, Dijkstras logic, proof obligations, and program proving. </DESCRIPTION><REQUIREMENTS>CSE 355</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>460 Software Engineering</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Software engineering foundations, formal representations in the software process, use of formalisms in creating a measured and structured working environment.  </DESCRIPTION><REQUIREMENTS>CSE 360</REQUIREMENTS><INSTRUCTOR>G. GANNOD</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>461 Software Engineering Project 1</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>First of 2-course software design sequence, Development planning, management, process modeling, incremental and team development using CASE tools.  </DESCRIPTION><REQUIREMENTS>CSE 360</REQUIREMENTS><INSTRUCTOR>S. YAU</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>462 Software Engineering Project 2</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Second of 2-course software design sequence, Process, product assessment and improvement, incremental and team development using CASE tools.  </DESCRIPTION><REQUIREMENTS>CSE 461</REQUIREMENTS><INSTRUCTOR>J. URBAN</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>470 Computer Graphics</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Display devices, data structures, transformation, interactive graphics, 3-dimensional graphics, and hidden line problem. Prerequisites: CSE 310; MAT 342. </DESCRIPTION><INSTRUCTOR>G. NIELSON</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>471 Introduction to Artificial Intelligence</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>State space search, heuristic search, games, knowledge representation techniques, expert systems, and automated reasoning.  </DESCRIPTION><REQUIREMENTS>CSE 240, 310</REQUIREMENTS><INSTRUCTOR>S. KAMBHAMPATI</INSTRUCTOR></COURSE INFO><COURSE INFO><COURSE>473 Nonprocedural Programming Languages</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Functional and logic programming using languages like Lucid and Prolog, Typical applications would be a Screen Editor and an Expert System. </DESCRIPTION><REQUIREMENTS>CSE 355</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>476 Introduction to Natural Language Processing</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Principles of computational linguistics, formal syntax, and semantics, as applied to the design of software with natural (human) language I/O. </DESCRIPTION><REQUIREMENTS>CSE 310</REQUIREMENTS></COURSE INFO><COURSE INFO><COURSE>477 Introduction to Computer-Aided Geometric Design</COURSE><CREDIT HOURS>3</CREDIT HOURS><DESCRIPTION>Introduction to parametric curves and surfaces. Bezier and B-spline interpolation</DESCRIPTION></COURSE INFO>